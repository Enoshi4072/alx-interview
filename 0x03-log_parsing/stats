#!/usr/bin/env python3

import sys

# Dictionary to store file size and status code counts
file_sizes = {'total': 0}
status_counts = {200: 0, 301: 0, 400: 0, 401: 0, 403: 0, 404: 0, 405: 0, 500: 0}

try:
    line_count = 0
    for line in sys.stdin:
        line_count += 1

        # Split the line by whitespace
        parts = line.strip().split()

        # Check if the line follows the expected format
        if len(parts) >= 7:
            ip_address, _, _, _, status_code, file_size = parts[:6]

            # Check if status code is an integer
            try:
                status_code = int(status_code)
            except ValueError:
                continue

            # Update file size total
            file_sizes['total'] += int(file_size)

            # Update status code counts
            if status_code in status_counts:
                status_counts[status_code] += 1

        # Print statistics after every 10 lines
        if line_count % 10 == 0:
            print("Total file size: File size:", file_sizes['total'])
            for status_code, count in sorted(status_counts.items()):
                if count > 0:
                    print(f"{status_code}: {count}")
            print()

except KeyboardInterrupt:
    # Handle keyboard interruption
    print("Total file size: File size:", file_sizes['total'])
    for status_code, count in sorted(status_counts.items()):
        if count > 0:
            print(f"{status_code}: {count}")
    sys.exit(0)
